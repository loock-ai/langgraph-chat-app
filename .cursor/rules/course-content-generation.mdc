---
description: 根据课程大纲生成教学文案的规则和提示词
---

# LangGraph 聊天应用课程文案生成规则

## 📋 课程基础信息

根据 [00-course-outline.md](mdc:docs/course/00-course-outline.md) 的课程大纲，本项目是一个零基础到专业开发者的 LangGraph 智能聊天应用开发教程，共8个章节。

### 技术栈
- **前端**: Next.js 15, React 19, TypeScript, Tailwind CSS
- **AI技术**: LangGraphJS, OpenAI API
- **后端**: Next.js API Routes, SQLite + better-sqlite3
- **项目结构**: 基于 `app/` 目录的实际代码

## 🔗 课程结构说明

### 完整的课程结构层次

#### 章节级别（Chapter Level）
```
docs/course/第X章-章节名称/
├── README.md           # 完整章节内容（概述+总结）
├── X.Y-小节名称/       # 第一个小节
├── X.Z-小节名称/       # 第二个小节
└── ...
```

#### 小节级别（Section Level）

##### 前2章（概念章节）
```
docs/course/第X章-章节名称/X.Y-小节名称/
└── README.md           # 完整小节演讲稿（概念讲解为主）
```

##### 第3章及以后（实践章节）
```
docs/course/第X章-章节名称/X.Y-小节名称/
├── README.md           # 完整小节演讲稿（简单概述+内容+总结简单）
└── examples/           # 完整代码示例
    └── complete/       # 完整项目代码示例
```

### 学习流程设计

每个学习单元都采用完整的自包含设计：

1. **章节README**：完整的章节内容（概述+小节介绍+章节总结）
2. **小节README**：完整的教学演讲稿（简单概述+内容+总结简单）

### 内容结构设计

#### 章节README结构
- 🎯 章节概述和价值
- 📚 学习路径和小节介绍
- 🛠️ 实践重点和技能要求
- 💡 学习建议和方法
- 📋 章节知识点总结
- 🚀 下一章节预告

#### 小节README结构设计

##### 前2章（概念章节）- 理论讲解为主
- 🎯 小节概述和学习目标
- 📚 核心概念深度讲解
- 💡 理论知识详细说明
- 🔧 概念理解指导
- 📋 知识点总结回顾
- 🚀 课程总结与展望

##### 第3章及以后（实践章节）- 代码实战为主
- 🎯 小节概述和学习目标
- 📚 核心内容深度讲解
- 💻 代码实战演示
- 🔧 实践指导
- 📋 知识点总结回顾
- 🚀 课程总结与展望

## 🎯 章节完整内容生成模板

### 章节完整内容提示词

```
请根据课程大纲 @00-course-outline.md 生成第 [X] 章的完整内容。

## 📋 生成要求

### 目标章节：第[X]章 [章节标题]
- 参考大纲中第[X]章的完整内容
- 提供章节的完整学习内容，包含概述和总结
- 明确章节在整个课程中的位置和作用

### 需要生成的文件：
1. `docs/course/第X章-章节名称/README.md` - 章节完整内容

### 完整内容结构：
1. **🎯 章节概述**
   - 章节核心价值和重要性
   - 与前后章节的连接关系
   - 学习完成后的能力提升

2. **📚 学习路径**
   - 章节内各小节的学习顺序
   - 每个小节的核心目标
   - 章节内知识点的递进关系

3. **🛠️ 实践重点**
   - 本章节的主要实战项目
   - 需要掌握的核心技能
   - 重要的代码实现

4. **💡 学习建议**
   - 学习方法和注意事项
   - 常见问题和解决方案
   - 进阶学习方向

5. **📋 章节知识点总结**
   - 按小节整理的核心概念
   - 重要API和方法
   - 关键配置和参数

6. **🔗 知识点关联图**
   - 知识点之间的依赖关系
   - 技术栈的集成方式
   - 前后章节的连接点

7. **✅ 学习检查清单**
   - 必须掌握的技能点
   - 可以独立完成的任务
   - 理论理解程度检查



请开始生成第[X]章的完整内容。
```

## 🎯 概念章节小节生成模板（第1-2章）

### 概念章节小节提示词

```
请根据课程大纲 @00-course-outline.md 生成第 [X.Y] 小节的完整教学演讲稿（理论讲解为主）。

## 📋 生成要求

### 目标小节：[X.Y] [小节标题]
- 参考大纲中第X章的相关内容
- 重点关注 [X.Y] 小节的具体知识点
- 以理论概念讲解为主，不需要完整项目代码
- 生成完整的演讲稿格式，包含概念讲解和知识点总结

### 需要生成的文件：
1. `docs/course/第X章-章节名称/X.Y-小节名称/README.md` - 完整演讲稿
注意：前2章不生成 examples/ 文件夹

### 演讲稿结构要求（概念讲解版）：
1. **🎯 小节概述与学习目标**
   - 小节核心价值和重要性
   - 与前后小节的连接关系
   - 具体的理论掌握目标
   - 本小节涉及的核心概念

2. **📚 核心概念深度讲解**
   - 理论知识详细说明
   - 概念原理深入解析
   - 与实际应用的关联
   - 生动的比喻和实例

3. **💡 理论知识详细说明**
   - 概念的背景和发展
   - 核心原理的深入剖析
   - 概念之间的关系梳理
   - 理论在实际中的意义

4. **🔧 概念理解指导**
   - 概念理解的方法技巧
   - 常见误区和澄清
   - 概念掌握的检验方法
   - 理论联系实际的思路

5. **📋 知识点总结回顾**
   - 本节课核心概念清单
   - 重要理论和原理回顾
   - 概念要点和关键理解
   - 学习检查清单

6. **🚀 课程总结与展望**
   - 学习成果的肯定
   - 与下节课的衔接
   - 课后思考建议
   - 激励继续学习的话语

### 演讲稿风格要求：
- 🎙️ 采用口语化的演讲风格
- 👥 面向零基础学员，语言亲切易懂
- 💪 充满热情和鼓励的教学语调
- 🔄 适当的重复和强调重点
- ❓ 设置思考问题和理解检验
- 📖 生动的举例和类比说明

### 内容要求：
- ✅ 遵循课程大纲中的学习目标
- ✅ 理论讲解深入浅出
- ✅ 适合零基础学员理解
- ✅ 中文教学，专业术语提供英文对照
- ✅ 理论知识系统完整
- ✅ 概念解释清晰准确
- ✅ 完整的演讲稿结构，从概述到总结

请开始生成第 [X.Y] 小节的完整理论教学演讲稿。
```

## 🎯 实践章节小节生成模板（第3章及以后）

### 使用方法
使用以下提示词模板来生成单个小节的完整演讲稿。将 `[X.Y]` 替换为具体的小节编号，将相关占位符替换为实际内容。

### 演讲稿提示词模板

```
请根据课程大纲 @00-course-outline.md 生成第 [X.Y] 小节的完整教学演讲稿。

## 📋 生成要求

### 目标小节：[X.Y] [小节标题]
- 参考大纲中第X章的相关内容
- 重点关注 [X.Y] 小节的具体知识点
- 基于项目 @app/ 目录下的实际代码
- 生成完整的演讲稿格式，包含教学内容和知识点总结

### 需要生成的文件：
1. `docs/course/第X章-章节名称/X.Y-小节名称/README.md` - 完整演讲稿
2. `docs/course/第X章-章节名称/X.Y-小节名称/examples/complete/` - 完整项目代码示例

### 演讲稿结构要求：
1. **🎯 小节概述与学习目标（简洁一些）**
   - 小节核心价值和重要性
   - 与前后小节的连接关系
   - 具体的技能掌握目标
   - 本小节涉及的核心技术

2. **📚 核心内容深度讲解**
   - 理论知识详细说明
   - 技术原理深入解析
   - 与实际项目的关联
   - 生动的比喻和实例

3. **💻 代码实战演示**
   - 完整代码的详细解析
   - 关键代码片段的重点说明
   - 现场编码的讲解思路
   - 基于实际项目的代码实现

4. **🔧 实践指导**
   - 代码运行和测试方法
   - 实际操作的具体步骤
   - 问题解决的方法指导
   - 鼓励学员动手实践的话术

5. **📋 知识点总结回顾（简洁）**
   - 本节课核心知识点清单
   - 重要API和方法回顾
   - 技术要点和最佳实践
   - 学习检查清单



### 演讲稿风格要求：
- 🎙️ 采用口语化的演讲风格
- 👥 面向零基础学员，语言亲切易懂
- 💪 充满热情和鼓励的教学语调
- 🔄 适当的重复和强调重点
- ❓ 设置互动问题和思考点
- 📖 生动的举例和类比说明

### 内容要求：
- ✅ 遵循课程大纲中的学习目标
- ✅ 基于实际项目代码，参考 @app/ 目录
- ✅ 包含完整可运行的代码示例
- ✅ 适合零基础学员理解
- ✅ 中文教学，专业术语提供英文对照
- ✅ 理论与实践相结合
- ✅ 提供具体的练习任务
- ✅ 完整的演讲稿结构，从开场到总结

### 代码示例要求：
- 🔥 必须可以直接复制运行
- 📝 详细的中文注释解释
- 🔗 基于项目实际代码结构
- 📁 包含完整的文件和依赖
- 🎯 完整的项目级代码示例

请开始生成 [X.Y] 小节的完整教学演讲稿。
```

### 推荐的生成顺序

#### 阶段1：章节完整内容生成
```
每章开始前，使用章节完整内容模板：
1. 第1章完整内容 → 第2章完整内容 → ... → 第8章完整内容
2. 包含章节概述、学习路径、实践重点、学习建议、知识点总结等
3. 确保章节之间的衔接自然，明确每章在整体课程中的定位
```

#### 阶段2：小节演讲稿生成
```
按章节顺序，根据章节特点生成相应的演讲稿：

前2章（概念章节）：
使用概念章节小节模板 → 生成 X.Y-小节名称/README.md
(包含：概述→概念讲解→理论说明→理解指导→知识总结→展望)
注意：不生成 examples/ 文件夹

第3章及以后（实践章节）：
使用实践章节小节模板 → 生成 X.Y-小节名称/README.md + examples/complete/
(包含：概述→内容讲解→代码演示→实践指导→知识总结→展望)

章节顺序：
1. **概念入门章节**：1.1 → 1.2 → 1.3（理论概念）
2. **环境准备章节**：2.1 → 2.2 → 2.3 → 2.4（环境配置概念）
3. **技术基础章节**：3.x → 4.x（前后端实践）
4. **AI集成章节**：5.1 → 5.2 → 5.3 → 5.4 → 5.5 → 5.6（核心技术）
5. **实战应用章节**：6.x → 7.x → 8.x（项目实现）
```

### 单个章节完整生成流程

#### 步骤1：生成章节完整内容
```
使用章节完整内容提示词 → 生成章节 README.md
检查：
- [ ] 章节概述清晰
- [ ] 学习路径明确
- [ ] 实践重点突出
- [ ] 学习建议实用
- [ ] 知识点总结完整
- [ ] 下一步方向明确
```

#### 步骤2：生成各小节演讲稿
```
根据章节类型选择相应模板：

前2章（概念章节）：
使用概念章节小节提示词 → 生成 X.Y-小节名称/README.md
检查：
- [ ] 小节概述与学习目标清晰
- [ ] 核心概念深度讲解完整
- [ ] 理论知识详细说明透彻
- [ ] 概念理解指导实用
- [ ] 知识点总结回顾全面
- [ ] 课程总结与展望激励人心
- [ ] 演讲稿风格口语化亲切
- [ ] 理论讲解深入浅出
- [ ] 概念解释清晰准确
- [ ] 适合理论教学的演讲稿

第3章及以后（实践章节）：
使用实践章节小节提示词 → 生成 X.Y-小节名称/README.md + examples/complete/
检查：
- [ ] 小节概述与学习目标清晰
- [ ] 核心内容深度讲解完整
- [ ] 代码实战演示详细
- [ ] 实践指导清楚实用
- [ ] 知识点总结回顾全面
- [ ] 课程总结与展望激励人心
- [ ] 演讲稿风格口语化亲切
- [ ] complete/示例完整，基于实际项目代码
- [ ] 所有代码都有详细的中文注释
- [ ] 代码可以直接复制运行
- [ ] 适合作为完整的教学演讲稿使用
```

### 🎯 具体示例工作流

#### 示例：完成第1章的完整生成

```
步骤1：章节完整内容
提示词：请根据课程大纲 @00-course-outline.md 生成第1章的完整内容。
输出：docs/course/第1章-概念入门/README.md
(包含：概述→学习路径→实践重点→学习建议→知识点总结→下一步方向)

步骤2：小节演讲稿生成

小节1.1 AI应用开发基础：
生成演讲稿：docs/course/第1章-概念入门/1.1-AI应用开发基础/README.md
(包含：概述→概念讲解→理论说明→理解指导→知识总结→展望)
注意：第1章为概念章节，不生成examples/文件夹

小节1.2 项目技术栈应用：
生成演讲稿：docs/course/第1章-概念入门/1.2-项目技术栈应用/README.md
(包含：概述→概念讲解→理论说明→理解指导→知识总结→展望)

小节1.3 项目架构设计：
生成演讲稿：docs/course/第1章-概念入门/1.3-项目架构设计/README.md
(包含：概述→概念讲解→理论说明→理解指导→知识总结→展望)
```

### 📝 具体提示词示例

#### 章节完整内容示例
```
请根据课程大纲 @00-course-outline.md 生成第1章的完整内容。

## 📋 生成要求

### 目标章节：第1章 概念入门
- 参考大纲中第1章的完整内容
- 提供章节的完整学习内容，包含概述和总结
- 明确章节在整个课程中的位置和作用

请开始生成第1章的完整内容。
```

#### 概念章节小节示例（第1-2章）
```
请根据课程大纲 @00-course-outline.md 生成第1.1小节的完整教学演讲稿（理论讲解为主）。

## 📋 生成要求

### 目标小节：1.1 AI应用开发基础
- 参考大纲中第1章的相关内容
- 重点关注1.1小节的具体知识点
- 以理论概念讲解为主，不需要完整项目代码
- 生成完整的演讲稿格式，包含概念讲解和知识点总结

请开始生成1.1小节的完整理论教学演讲稿。
```

#### 实践章节小节示例（第3章及以后）
```
请根据课程大纲 @00-course-outline.md 生成第3.1小节的完整教学演讲稿。

## 📋 生成要求

### 目标小节：3.1 React基础应用
- 参考大纲中第3章的相关内容
- 重点关注3.1小节的具体知识点
- 基于项目 @app/ 目录下的实际代码
- 生成完整的演讲稿格式，包含小节概述、教学内容和知识点总结

请开始生成3.1小节的完整教学演讲稿。
```